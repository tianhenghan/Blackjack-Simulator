Written in Python, my code performs Monte Carlo simulations for the player's actions. The results are recorded into a strategy table, which feeds a machine learning algorithm. Within seconds, the learnt strategy decreases the house edge from one third to ~ 1%. The effect of rule variations, such as number of decks or dealer hits/stands soft 17, on the house edge can be analyzed. My code also allows a manual mode for a gambler to enjoy. Currently, I am optimizing the code efficiency with an eye towards incorporating creative functions.